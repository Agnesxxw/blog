(window.webpackJsonp=window.webpackJsonp||[]).push([[177],{730:function(t,a,e){"use strict";e.r(a);var s=e(12),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"创建型模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建型模式"}},[t._v("#")]),t._v(" 创建型模式")]),t._v(" "),e("blockquote",[e("p",[t._v("创建对象的模式，抽象了实例化的过程")])]),t._v(" "),e("h2",{attrs:{id:"结构型模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#结构型模式"}},[t._v("#")]),t._v(" 结构型模式")]),t._v(" "),e("blockquote",[e("p",[t._v("解决怎样组装现有对象，设计交互方式，从而达到实现一定的功能目的。例如，以封装为目的的适配器和桥接，以扩展性为目的的代理、装饰器")])]),t._v(" "),e("h2",{attrs:{id:"行为型模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#行为型模式"}},[t._v("#")]),t._v(" 行为型模式")]),t._v(" "),e("blockquote",[e("p",[t._v("描述多个类或对象怎样交互以及怎样分配职责")])])])}),[],!1,null,null,null);a.default=r.exports}}]);