(window.webpackJsonp=window.webpackJsonp||[]).push([[221],{793:function(v,_,e){"use strict";e.r(_);var t=e(12),a=Object(t.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("p",[v._v("在阅读之前，希望您对正则表达式有过一些使用经验，本文介绍 4 个部分：")]),v._v(" "),e("ul",[e("li",[v._v("锚点")]),v._v(" "),e("li",[v._v("特征标群")]),v._v(" "),e("li",[v._v("贪婪模式和惰性匹配")]),v._v(" "),e("li",[v._v("零宽度断言")])]),v._v(" "),e("h2",{attrs:{id:"锚点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#锚点"}},[v._v("#")]),v._v(" 锚点")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("^")]),v._v("：匹配文本应该在字符串的开头")]),v._v(" "),e("li",[e("code",[v._v("$")]),v._v(": 匹配文本应该在字符串的结尾")])]),v._v(" "),e("p",[v._v("例如 "),e("code",[v._v("/^(T|t)he/")]),v._v(" 匹配 "),e("code",[v._v("The car is parked in the garage.")]),v._v(" 中的 "),e("code",[v._v("The")]),v._v("。")]),v._v(" "),e("p",[v._v("对于多行文本，开启"),e("code",[v._v("g")]),v._v("（全局搜索）和"),e("code",[v._v("m")]),v._v("（多行修饰符）标志。例如对于多行字符串：")]),v._v(" "),e("div",{staticClass:"language-纯文本 line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("The car is parked in the garage.\nThe car is parked in the garage.\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br"),e("span",{staticClass:"line-number"},[v._v("2")]),e("br")])]),e("p",[e("code",[v._v("/^(T|t)he/gm")]),v._v(" 可以匹配两个 "),e("code",[v._v("The")]),v._v("。")]),v._v(" "),e("h2",{attrs:{id:"特征标群"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#特征标群"}},[v._v("#")]),v._v(" 特征标群")]),v._v(" "),e("p",[v._v("特征标群是指写在 "),e("code",[v._v("(...)")]),v._v(" 中的子模式。")]),v._v(" "),e("p",[e("strong",[v._v("用途 1")]),v._v(": 子模式中可以包含多个字符，它们被视为“一体”。可以搭配"),e("code",[v._v("*")]),v._v("、"),e("code",[v._v(".")]),v._v("、"),e("code",[v._v("?")]),v._v(" 使用。")]),v._v(" "),e("p",[e("strong",[v._v("用途 2")]),v._v(": 配合"),e("code",[v._v("|")]),v._v("使用。例如 "),e("code",[v._v("/(ab|ef)c/g")]),v._v(" 匹配 "),e("code",[v._v("abc efc")]),v._v(" 中的 abc 和 efc。")]),v._v(" "),e("h2",{attrs:{id:"贪婪模式和惰性匹配"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#贪婪模式和惰性匹配"}},[v._v("#")]),v._v(" 贪婪模式和惰性匹配")]),v._v(" "),e("p",[v._v("正则表达式默认是贪婪模式，也就是尽可能多的匹配。例如 "),e("code",[v._v("/.*at/")]),v._v(" 匹配 "),e("code",[v._v("The fat cat sat on the mat.")]),v._v(" 的全部。可以理解为：从符合匹配的位置开始，尽可能地向后搜索，直到不能向后。")]),v._v(" "),e("p",[v._v("开启惰性匹配的方法是使用 "),e("code",[v._v("?")]),v._v("，形如 "),e("code",[v._v("/.*?at/")]),v._v("、"),e("code",[v._v("/.+?at/")]),v._v("。例如 "),e("code",[v._v("/.*?at/")]),v._v(" 匹配 "),e("code",[v._v("The fat cat sat on the mat.")]),v._v(" 中的 "),e("code",[v._v("The fat")]),v._v("。可以理解为：从符合匹配的位置开始，向后搜索，一旦完成匹配，立即停止。")]),v._v(" "),e("h2",{attrs:{id:"零宽度断言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#零宽度断言"}},[v._v("#")]),v._v(" 零宽度断言")]),v._v(" "),e("p",[v._v("虽然名字很唬人，但是它很有用。通俗来说，它用来检查符合匹配规则的字符串的前/后是否符合规则。")]),v._v(" "),e("table",[e("thead",[e("tr",[e("th",[v._v("符号")]),v._v(" "),e("th",[v._v("描述")])])]),v._v(" "),e("tbody",[e("tr",[e("td",[e("code",[v._v("?=")])]),v._v(" "),e("td",[v._v("正先行断言-存在")])]),v._v(" "),e("tr",[e("td",[e("code",[v._v("?!")])]),v._v(" "),e("td",[v._v("负先行断言-排除")])]),v._v(" "),e("tr",[e("td",[e("code",[v._v("?<=")])]),v._v(" "),e("td",[v._v("正后发断言-存在")])]),v._v(" "),e("tr",[e("td",[e("code",[v._v("?<!")])]),v._v(" "),e("td",[v._v("负后发断言-排除")])])])]),v._v(" "),e("p",[v._v("对于先行断言"),e("code",[v._v("?=")]),v._v("和"),e("code",[v._v("?!")]),v._v("来说，它们检查“后面”是否符合规则。例如：")]),v._v(" "),e("ul",[e("li",[e("p",[e("code",[v._v("\\(T|t)he(?=\\sfat)\\")]),v._v(" 匹配 "),e("code",[v._v("The fat cat sat on the mat.")]),v._v(" 中的 "),e("code",[v._v("The")])])]),v._v(" "),e("li",[e("p",[e("code",[v._v("\\(T|t)he(?!\\sfat)\\")]),v._v(" 匹配 "),e("code",[v._v("The fat cat sat on the mat.")]),v._v(" 中的 "),e("code",[v._v("the")])])])]),v._v(" "),e("p",[v._v("对于后发断言，它们检查“前面”是否符合规则。")]),v._v(" "),e("h2",{attrs:{id:"推荐"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#推荐"}},[v._v("#")]),v._v(" 推荐")]),v._v(" "),e("ul",[e("li",[v._v("练习："),e("a",{attrs:{href:"https://regex101.com/",target:"_blank",rel:"noopener noreferrer"}},[v._v("正则在线匹配平台"),e("OutboundLink")],1)]),v._v(" "),e("li",[v._v("手册："),e("a",{attrs:{href:"https://github.com/ziishaned/learn-regex/blob/master/translations/README-cn.md",target:"_blank",rel:"noopener noreferrer"}},[v._v("github: learn-regex 中文版"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);_.default=a.exports}}]);